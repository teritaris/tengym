import { AddressDto } from './AddressDto';
import { BlockFeeMultiplierDto } from './BlockFeeMultiplierDto';
import { BlockTypeDto } from './BlockTypeDto';
import { DifficultyDto } from './DifficultyDto';
import { Hash256Dto } from './Hash256Dto';
import { HeightDto } from './HeightDto';
import { NetworkTypeDto } from './NetworkTypeDto';
import { PublicKeyDto } from './PublicKeyDto';
import { Serializer } from './Serializer';
import { SignatureDto } from './SignatureDto';
import { TimestampDto } from './TimestampDto';
import { VrfProofBuilder } from './VrfProofBuilder';
export declare class BlockHeaderBuilder implements Serializer {
    readonly signature: SignatureDto;
    readonly signerPublicKey: PublicKeyDto;
    readonly version: number;
    readonly network: NetworkTypeDto;
    readonly type: BlockTypeDto;
    readonly height: HeightDto;
    readonly timestamp: TimestampDto;
    readonly difficulty: DifficultyDto;
    readonly generationHashProof: VrfProofBuilder;
    readonly previousBlockHash: Hash256Dto;
    readonly transactionsHash: Hash256Dto;
    readonly receiptsHash: Hash256Dto;
    readonly stateHash: Hash256Dto;
    readonly beneficiaryAddress: AddressDto;
    readonly feeMultiplier: BlockFeeMultiplierDto;
    constructor(signature: SignatureDto, signerPublicKey: PublicKeyDto, version: number, network: NetworkTypeDto, type: BlockTypeDto, height: HeightDto, timestamp: TimestampDto, difficulty: DifficultyDto, generationHashProof: VrfProofBuilder, previousBlockHash: Hash256Dto, transactionsHash: Hash256Dto, receiptsHash: Hash256Dto, stateHash: Hash256Dto, beneficiaryAddress: AddressDto, feeMultiplier: BlockFeeMultiplierDto);
    static loadFromBinary(payload: Uint8Array): BlockHeaderBuilder;
    static createBlockHeaderBuilder(signature: SignatureDto, signerPublicKey: PublicKeyDto, version: number, network: NetworkTypeDto, type: BlockTypeDto, height: HeightDto, timestamp: TimestampDto, difficulty: DifficultyDto, generationHashProof: VrfProofBuilder, previousBlockHash: Hash256Dto, transactionsHash: Hash256Dto, receiptsHash: Hash256Dto, stateHash: Hash256Dto, beneficiaryAddress: AddressDto, feeMultiplier: BlockFeeMultiplierDto): BlockHeaderBuilder;
    getSignature(): SignatureDto;
    getSignerPublicKey(): PublicKeyDto;
    getVersion(): number;
    getNetwork(): NetworkTypeDto;
    getType(): BlockTypeDto;
    getHeight(): HeightDto;
    getTimestamp(): TimestampDto;
    getDifficulty(): DifficultyDto;
    getGenerationHashProof(): VrfProofBuilder;
    getPreviousBlockHash(): Hash256Dto;
    getTransactionsHash(): Hash256Dto;
    getReceiptsHash(): Hash256Dto;
    getStateHash(): Hash256Dto;
    getBeneficiaryAddress(): AddressDto;
    getFeeMultiplier(): BlockFeeMultiplierDto;
    getSize(): number;
    serialize(): Uint8Array;
}
